/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.yoon.pms;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayDeque;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import com.yoon.pms.dao.BuyerBoardCommentDao;
import com.yoon.pms.dao.BuyerBoardDao;
import com.yoon.pms.dao.BuyerMemberDao;
import com.yoon.pms.dao.MenuDao;
import com.yoon.pms.dao.OrderDao;
import com.yoon.pms.dao.SellerBoardCommentDao;
import com.yoon.pms.dao.SellerBoardDao;
import com.yoon.pms.dao.SellerMemberDao;
import com.yoon.pms.dao.mariadb.BuyerBoardCommentDaoImpl;
import com.yoon.pms.dao.mariadb.BuyerBoardDaoImpl;
import com.yoon.pms.dao.mariadb.BuyerMemberDaoImpl;
import com.yoon.pms.dao.mariadb.MenuDaoImpl;
import com.yoon.pms.dao.mariadb.OrderDaoImpl;
import com.yoon.pms.dao.mariadb.SellerBoardCommentDaoImpl;
import com.yoon.pms.dao.mariadb.SellerBoardDaoImpl;
import com.yoon.pms.dao.mariadb.SellerMemberDaoImpl;
import com.yoon.pms.handler.Command;
import com.yoon.pms.handler.MemberAddHandler;
import com.yoon.pms.handler.MemberValidator;
import com.yoon.pms.handler.Temp;
import com.yoon.util.Prompt;

public class ClientApp {

  String serverAddress;
  int port;

  public ClientApp(String address, int port) {
    this.serverAddress = address;
    this.port = port;
  }

  ArrayDeque<String> commandStack = new ArrayDeque<>();
  LinkedList<String> commandQueue = new LinkedList<>();
  static public int location = -1;


  Map<String,Object> appContext = new HashMap<>();

  public static void main(String[] args) {
    ClientApp app = new ClientApp("localhost", 8888);
    try {
      app.execute();
    }
    catch (Exception e) {
      System.out.println("클라이언트 실행 중 오류 발생");
      e.printStackTrace();
    }
  }


  public void execute() throws Exception {

    Connection con = DriverManager.getConnection(
        "jdbc:mariadb://localhost:3306/taehoondb?user=taehoon&password=1111"
        );


    BuyerMemberDao buyerMemberDao = new BuyerMemberDaoImpl(con);
    BuyerBoardDao buyerBoardDao = new BuyerBoardDaoImpl(con);
    BuyerBoardCommentDao buyerBoardCommentDao = new BuyerBoardCommentDaoImpl(con);
    SellerMemberDao sellerMemberDao = new SellerMemberDaoImpl(con);
    SellerBoardDao sellerBoardDao = new SellerBoardDaoImpl(con);
    SellerBoardCommentDao sellerBoardCommentDao = new SellerBoardCommentDaoImpl(con);
    OrderDao orderDao = new OrderDaoImpl(con);
    MenuDao menuDao = new MenuDaoImpl(con);

    HashMap<String, Command> commandMap = new HashMap<>();

    MemberValidator memberValidator = new MemberValidator();

    //    commandMap.put("관리자로그인", new MemberAdminLoginHandler());
    loop:
      while(true) {
        if(location == -1) /* 메인 메뉴 */ {
          System.out.println("■ 메뉴 ■");
          System.out.println("1. 회원가입");
          System.out.println("2. 로그인");
          System.out.println("3. 구매자 게시판");
          System.out.println("4. 판매자 게시판");
          System.out.println("5. 통합 게시판");
          System.out.println("6. 고객센터");
          System.out.println("7. 사이트 종료\n");
          commandMap.put("1", new MemberAddHandler(buyerMemberDao, sellerMemberDao, memberValidator));
          //          commandMap.put("2", new MemberLoginHandler());
          //          commandMap.put("3", new BuyerBoardServiceHandler());
          //          commandMap.put("4", new SellerBoardServiceHandler());
          //          commandMap.put("5", new IntegratedBoardServiceHandler());
          commandMap.put("6", new Temp());
          //                    commandMap.put("7", return);
        }






        //        
        //        else if(location == 0) /*구매자 로그인 상태 */ {
        //          System.out.println("■ 메뉴 - 구매자 ■");
        //          System.out.println("1. 주문하기");
        //          System.out.println("2. 구매자 게시판");
        //          System.out.println("3. 통합 게시판");
        //          System.out.println("4. 설정");
        //          System.out.println("5. 고객센터");
        //          System.out.println("6. 로그아웃");
        //          System.out.println("7. 종료\n");
        //          commandMap.put("1", new OrderAddHandler(orderList, buyerMemberList, sellerMemberList, menuList));
        //          commandMap.put("2", new BuyerBoardServiceHandler(buyerBoardList, buyerCommentList));
        //          commandMap.put("3", new IntegratedBoardServiceHandler(integratedBoardList, integratedCommentList));
        //          commandMap.put("4", new MemberSettingHandler(buyerMemberList, sellerMemberList, buyerBoardList, buyerCommentList, sellerBoardList, sellerCommentList, memberValidatorHandler));
        //          commandMap.put("5", new Temp());
        //          commandMap.put("6", new MemberLogoutHandler(buyerMemberList, sellerMemberList, logList));
        //        }
        //        else if(location == 1) /*판매자 로그인 상태 */ {
        //          System.out.println("■ 메뉴 - 판매자 ■");
        //          System.out.println("1. 메뉴 목록");
        //          System.out.println("2. 주문 목록");
        //          System.out.println("3. 판매자 게시판");
        //          System.out.println("4. 통합 게시판");
        //          System.out.println("5. 설정");
        //          System.out.println("6. 고객센터");
        //          System.out.println("7. 로그아웃");
        //          System.out.println("8. 종료\n");
        //          commandMap.put("1", new MenuServiceHandler(menuList));
        //          commandMap.put("2", new Temp());
        //          commandMap.put("3", new SellerBoardServiceHandler(sellerBoardList, sellerCommentList));
        //          commandMap.put("4", new IntegratedBoardServiceHandler(integratedBoardList, integratedCommentList));
        //          commandMap.put("5", new MemberSettingHandler(buyerMemberList, sellerMemberList, buyerBoardList, buyerCommentList, sellerBoardList, sellerCommentList, memberValidatorHandler));
        //          commandMap.put("6", new Temp());
        //          commandMap.put("7", new MemberLogoutHandler(buyerMemberList, sellerMemberList, logList));
        //        }
        //        else if(location == 2) /* 구매게시판 관리 */ {
        //          System.out.println("■ 메뉴 - 구매자 게시판 ■");
        //          System.out.println("1. 게시글 쓰기");
        //          System.out.println("2. 게시글 목록");
        //          System.out.println("3. 게시글 보기");
        //          System.out.println("4. 내 글 수정");
        //          System.out.println("5. 내 댓글 보기");
        //          System.out.println("6. 나가기\n");
        //          commandMap.put("1", new BuyerBoardAddHandler(buyerBoardList, buyerCommentList));
        //          commandMap.put("2", new BuyerBoardListHandler(buyerBoardList, buyerCommentList));
        //          commandMap.put("3", new BuyerBoardDetailHandler(buyerBoardList, buyerCommentList));
        //          commandMap.put("4", new BuyerBoardMyListHandler(buyerBoardList, buyerCommentList));
        //          commandMap.put("5", new BuyerBoardMyCommentListHandler(buyerBoardList, buyerCommentList));
        //          commandMap.put("6", new BuyerBoardReturnHandler(buyerBoardList, buyerCommentList));
        //        }
        //        else if(location == 3) /* 판매게시판 관리 */ {
        //          System.out.println("■ 메뉴 - 판매자 게시판 ■");
        //          System.out.println("1. 게시글 쓰기");
        //          System.out.println("2. 게시글 목록");
        //          System.out.println("3. 게시글 보기");
        //          System.out.println("4. 내 글 수정");
        //          System.out.println("5. 내 댓글 보기");
        //          System.out.println("6. 나가기\n");
        //          commandMap.put("1", new SellerBoardAddHandler(sellerBoardList, sellerCommentList));
        //          commandMap.put("2", new SellerBoardListHandler(sellerBoardList, sellerCommentList));
        //          commandMap.put("3", new SellerBoardDetailHandler(sellerBoardList, sellerCommentList));
        //          commandMap.put("4", new SellerBoardMyListHandler(sellerBoardList, sellerCommentList));
        //          commandMap.put("5", new SellerBoardMyCommentListHandler(sellerBoardList, sellerCommentList));
        //          commandMap.put("6", new SellerBoardReturnHandler(sellerBoardList, sellerCommentList));
        //
        //        }
        //        else if(location == 4) /* 통합게시판 관리 */ {
        //          System.out.println("■ 메뉴 - 통합 게시판 ■");
        //          System.out.println("1. 게시글 쓰기");
        //          System.out.println("2. 게시글 목록");
        //          System.out.println("3. 게시글 보기");
        //          System.out.println("4. 내가 글 수정");
        //          System.out.println("5. 나가기\n");
        //          commandMap.put("1", new IntegratedBoardAddHandler(integratedBoardList, integratedCommentList));
        //          commandMap.put("2", new IntegratedBoardListHandler(integratedBoardList, integratedCommentList));
        //          commandMap.put("3", new IntegratedDetailBoardHandler(integratedBoardList, integratedCommentList));
        //          commandMap.put("4", new IntegratedBoardMyListHandler(integratedBoardList, integratedCommentList));
        //          commandMap.put("5", new IntegratedBoardReturnHandler(integratedBoardList, integratedCommentList));
        //        }
        //        else if(location == 5) /* 판매자 메뉴 관리 */ {
        //          System.out.println("■ 메뉴 - 판매자 메뉴 ■");
        //          System.out.println("1. 메뉴 추가");
        //          System.out.println("2. 메뉴 목록");
        //          System.out.println("3. 메뉴 변경");
        //          System.out.println("4. 메뉴 삭제");
        //          System.out.println("5. 나가기\n");
        //          commandMap.put("1", new MenuAddHandler(menuList));
        //          commandMap.put("2", new MenuMyListHandler(menuList));
        //          commandMap.put("3", new MenuUpdateHandler(menuList));
        //          commandMap.put("4", new MenuDeleteHandler(menuList));
        //          commandMap.put("5", new MenuReturnHandler(menuList));
        //        }
        //        else if(location == 6) /* 관리자 */ {
        //          System.out.println("■ 메뉴 - 관리자 메뉴 ■");
        //          System.out.println("1. 회원 관리");
        //          System.out.println("2. 회원 로그");
        //          System.out.println("3. 로그아웃\n");
        //          commandMap.put("1", new MemberListHandler(buyerMemberList, sellerMemberList));
        //          commandMap.put("2", new LogHandler(logList));
        //          commandMap.put("3", new MemberAdminLogoutHandler(buyerMemberList, sellerMemberList));
        //
        //        }
        //        else if(location == 7) /* 구매자 주문 관리 */ {
        //          System.out.println("■ 메뉴 - 주문 메뉴 ■");
        //          System.out.println("1. 주문하기");
        //          System.out.println("2. 주문 취소");
        //          System.out.println("3. 나가기\n");
        //
        //                    commandMap.put("1", new OrderAddHandler(orderList));
        //          commandMap.put("2", new OrderAddHandler(orderList));
        //          commandMap.put("3", new OrderAddHandler(orderList));
        //          commandMap.put("4", new OrderAddHandler(orderList));
        //        }







        else if(location == 8) /* 판매자 주문 관리 */ {
          System.out.println("■ 메뉴 - 주문 관리 ■");
          System.out.println("1. 주문 확인");
          System.out.println("2. 주문 취소");
        }


        //              else if(location == 9) {
        //
        //              }


        String menu = Prompt.inputString("메뉴 입력 : ");
        System.out.println();


        commandStack.push(menu);
        commandQueue.offer(menu);
        try {
          switch(menu) {
            case "shistory":
              printCommandHistory(commandStack.iterator());
              break;
            case "qhistory":
              printCommandHistory(commandQueue.iterator());
              break;
            case "종료":
              //              MemberLogoutHandler m = new MemberLogoutHandler(buyerMemberList, sellerMemberList, logList);
              //              m.service();
              break loop;
            case "exit":
              break loop;
            default:
              // commandHandler에 명령어를 해쉬맵의 값에서 꺼내고 비교하며, 값이 null이면 실행 X, 아니면 실행 O 
              Command commandHandler = commandMap.get(menu);
              if(commandHandler == null) {
                System.out.println("실행할 수 없는 명령입니다.");
              }
              else {
                commandHandler.service();
              }
          }
        } catch (Exception e) {
          System.out.println("---------------------------------------------");
          System.out.printf("명령어 실행 중 오류 발생 : %s - %s\n",e.getClass().getName(), e.getMessage());
          e.printStackTrace();
          System.out.println("---------------------------------------------");
        }
      }
    con.close();
    Prompt.close();
  }



  static void printCommandHistory(Iterator<String> iterator) {
    int count = 0;
    while (iterator.hasNext()) {
      System.out.println(iterator.next());
      if ((++count % 5) == 0) {
        String input = Prompt.inputString(": ");
        if (input.equalsIgnoreCase("q")) {
          break;
        }
      }
    }
  }
}
